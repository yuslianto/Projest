{
  "_args": [
    [
      {
        "raw": "react-native-banner-carousel",
        "scope": null,
        "escapedName": "react-native-banner-carousel",
        "name": "react-native-banner-carousel",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\document\\react\\MyProject"
    ]
  ],
  "_from": "react-native-banner-carousel@latest",
  "_id": "react-native-banner-carousel@1.0.3",
  "_inCache": true,
  "_location": "/react-native-banner-carousel",
  "_nodeVersion": "6.10.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-banner-carousel_1.0.3_1520485375652_0.1886815616748243"
  },
  "_npmUser": {
    "name": "f111fei",
    "email": "mail@xzper.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-banner-carousel",
    "scope": null,
    "escapedName": "react-native-banner-carousel",
    "name": "react-native-banner-carousel",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-banner-carousel/-/react-native-banner-carousel-1.0.3.tgz",
  "_shasum": "83d760233cd7496b595a3c1e51399ffcb16edcb2",
  "_shrinkwrap": null,
  "_spec": "react-native-banner-carousel",
  "_where": "D:\\document\\react\\MyProject",
  "author": {
    "name": "xzper"
  },
  "bugs": {
    "url": "https://github.com/f111fei/react-native-banner-carousel/issues"
  },
  "dependencies": {},
  "description": "a carousel component for React Native",
  "devDependencies": {
    "@types/react-native": "^0.46.9"
  },
  "directories": {},
  "dist": {
    "shasum": "83d760233cd7496b595a3c1e51399ffcb16edcb2",
    "tarball": "https://registry.npmjs.org/react-native-banner-carousel/-/react-native-banner-carousel-1.0.3.tgz",
    "fileCount": 7,
    "unpackedSize": 19137
  },
  "gitHead": "149d5915255fc4dc1e6d450982c64c90339906c6",
  "homepage": "https://github.com/f111fei/react-native-banner-carousel",
  "keywords": [
    "react-native-component",
    "react-component",
    "react-native",
    "ios",
    "android",
    "swiper",
    "carousel",
    "react-native-swiper",
    "react-native-carousel"
  ],
  "license": "MIT",
  "main": "out/index.js",
  "maintainers": [
    {
      "name": "f111fei",
      "email": "mail@xzper.com"
    }
  ],
  "name": "react-native-banner-carousel",
  "optionalDependencies": {},
  "readme": "# react-native-banner-carousel\n\nSwiper component for React Native. Compatible with Android & iOS. Pull requests are very welcome!\n\n## Show Case\n\n![](images/showcase.gif)\n\n![](https://user-images.githubusercontent.com/7069719/28824969-0886c69e-76f7-11e7-8119-d77646246d98.png)\n\n[explore in expo](https://expo.io/@xzper/react-native-banner-carousel-example)\n\n\n## Install\n```\n$ npm install --save react-native-banner-carousel\n```\n\n## Usage\n\n```js    \nimport React from 'react';\nimport Carousel from 'react-native-banner-carousel';\nimport { StyleSheet, Image, View, Dimensions } from 'react-native';\n\nconst BannerWidth = Dimensions.get('window').width;\nconst BannerHeight = 260;\n\nconst images = [\n    \"http://xxx.com/1.png\",\n    \"http://xxx.com/2.png\",\n    \"http://xxx.com/3.png\"\n];\n\nexport default class App extends React.Component {\n    renderPage(image, index) {\n        return (\n            <View key={index}>\n                <Image style={{ width: BannerWidth, height: BannerHeight }} source={{ uri: image }} />\n            </View>\n        );\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <Carousel\n                    autoplay\n                    autoplayTimeout={5000}\n                    loop\n                    index={0}\n                    pageSize={BannerWidth}\n                >\n                    {images.map((image, index) => this.renderPage(image, index))}\n                </Carousel>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        justifyContent: 'center'\n    },\n});\n```\n\n## Properties\n\n### Base\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| **pageSize** | windowWidth | `number` | the size of carousel page, must be the same for all of them. Required with horizontal carousel.  |\n| loop | true | `bool` | Set to `false` to disable continuous loop mode. |\n| index | 0 | `number` | Index number of initial slide. |\n| autoplay | true | `bool` | Set to `true` enable auto play mode. |\n| autoplayTimeout | 5000 | `number` | Delay between auto play transitions (in Millisecond). |\n| animation | - | `func` | function that returns a React Native Animated configuration. `(animate: Animated.Value, toValue: number) => Animated.CompositeAnimation;` |\n| onPageChanged | - | `func` | page change callback. `(index: number) => void;` |\n\n### Pagination\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| showsPageIndicator | true | `bool` | Set to true make pagination indicator visible.  |\n| pageIndicatorContainerStyle | - | `style` | Custom styles will merge with the default styles. |\n| pageIndicatorStyle | - | `style` | Custom styles will merge with the default styles. |\n| activePageIndicatorStyle | - | `style` | Custom styles will merge with the default styles. |\n| pageIndicatorOffset | 16 | `number` | The active page indicator offset when change page. |\n| renderPageIndicator | - | `func` | Complete control how to render pagination. `(config: PageIndicatorConfig) => JSX.Element;`. |\n\n#### PageIndicatorConfig\n```js\ninterface PageIndicatorConfig {\n    pageNum: number;\n    childrenNum: number;\n    loop: boolean;\n    scrollValue: Animated.Value;\n}\n```\n\n#### Custom Pagination Indicator\n\nHere is an example for custom pagination indicator:\n```js\nrenderIndicator(config: PageIndicatorConfig) {\n    const { childrenNum, pageNum, loop, scrollValue } = config;\n    if (pageNum === 0) {\n        return null;\n    }\n\n    const indicators: JSX.Element[] = [];\n    for (let i = 0; i < pageNum; i++) {\n        indicators.push(<View key={i} style={[styles.pageIndicatorStyle, this.props.pageIndicatorStyle]} />);\n    }\n\n    let left: Animated.AnimatedInterpolation;\n\n    if (pageNum === 1) {\n        left = this.state.scrollValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, 0]\n        });\n    } else if (!loop) {\n        left = this.state.scrollValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, 16]\n        });\n    } else {\n        left = this.state.scrollValue.interpolate({\n            inputRange: [0, 1, 2, childrenNum - 2, childrenNum - 1],\n            outputRange: [0, 0, 16, 16 * (childrenNum - 3), 16 * (childrenNum - 3)]\n        });\n    }\n\n    return (\n        <View style={{ position: 'absolute', alignSelf: 'center', flexDirection: 'row', bottom: 10 }}>\n            {indicators}\n            <Animated.View\n                style={[\n                    this.props.pageIndicatorStyle, this.props.activePageIndicatorStyle,\n                    { left: left }\n                ]}\n            />\n        </View>\n    );\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/f111fei/react-native-banner-carousel.git"
  },
  "scripts": {
    "build": "tsc -w",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "typings": "out/index.d.ts",
  "version": "1.0.3"
}
